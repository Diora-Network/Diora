//! Autogenerated weights for pallet_diora_rewards
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-30, STEPS: `50`, REPEAT: 200, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/diora
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_diora_rewards
// --extrinsic
// *
// --steps
// 50
// --repeat
// 200
// --template
// ./.maintain/frame-weight-template.hbs
// --output
// ./pallets/diora-rewards/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;
/// Weight functions needed for pallet_diora_rewards.
pub trait WeightInfo {
    fn initialize_contributors_list() -> Weight;
    fn complete_initialization() -> Weight;
    fn claim_rewards() -> Weight;
}

/// Weights for pallet_diora_rewards using the Diora node and recommended hardware.
pub struct DioraWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for DioraWeight<T> {
    // Storage: DioraRewards InitBlock (r:1 w:0)
    // Storage: DioraRewards ContributorsInfo (r:0 w:2)
    fn initialize_contributors_list() -> Weight {
        Weight::from_ref_time(39_174_000)
            .saturating_add(T::DbWeight::get().reads(1u64))
            .saturating_add(T::DbWeight::get().writes(2u64))
    }
    // Storage: DioraRewards InitBlock (r:1 w:0)
    // Storage: DioraRewards EndBlock (r:0 w:1)
    fn complete_initialization() -> Weight {
        Weight::from_ref_time(18_768_000)
            .saturating_add(T::DbWeight::get().reads(1u64))
            .saturating_add(T::DbWeight::get().writes(1u64))
    }
    // Storage: DioraRewards ContributorsInfo (r:1 w:1)
    // Storage: DioraRewards EndBlock (r:1 w:0)
    // Storage: DioraRewards InitBlock (r:1 w:0)
    // Storage: ParachainSystem ValidationData (r:1 w:0)
    // Storage: System Account (r:2 w:2)
    fn claim_rewards() -> Weight {
        Weight::from_ref_time(72_147_000)
            .saturating_add(T::DbWeight::get().reads(6u64))
            .saturating_add(T::DbWeight::get().writes(3u64))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn initialize_contributors_list() -> Weight {
        Weight::from_ref_time(39_174_000)
            .saturating_add(RocksDbWeight::get().reads(1u64))
            .saturating_add(RocksDbWeight::get().writes(2u64))
    }
    fn complete_initialization() -> Weight {
        Weight::from_ref_time(18_768_000)
            .saturating_add(RocksDbWeight::get().reads(1u64))
            .saturating_add(RocksDbWeight::get().writes(1u64))
    }
    fn claim_rewards() -> Weight {
        Weight::from_ref_time(72_147_000)
            .saturating_add(RocksDbWeight::get().reads(6u64))
            .saturating_add(RocksDbWeight::get().writes(3u64))
    }
}
